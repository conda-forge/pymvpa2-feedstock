{% set name = "pymvpa2" %}
{% set version = "2.6.3" %}
{% set sha256 = "b650b98ec21d92e53daffe1a09a28af3b20dfa0a337de5dde1396ce3478d066c" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  skip: True  # [not py2k]
  script: python setup.py install

requirements:
  build:
    - python
    - swig
    - toolchain
    - numpy 1.9.*  # [not (win and py36)]
    - numpy 1.11.*  # [win and py36]
  run:
    - python
    - h5py
    - joblib
    - matplotlib
    - nibabel
    - numpy >=1.9  # [not (win and py36)]
    - numpy >=1.11  # [win and py36]
    - scikit-learn
    - scipy
    - statsmodels
    # TODO: Later, yet to package
    # - duecredit

test:
  requires:
    - mock
    - nose
  imports:
    - mvpa2
    - mvpa2.tests

about:
  home: http://pymvpa.org
  license: MIT
  license_family: MIT
  license_file: COPYING
  summary: 'Python multivariate pattern analysis framework'

  description: |
    PyMVPA eases pattern classification analyses of large datasets, with an
    accent on neuroimaging. It provides high-level abstraction of typical
    processing steps (e.g., data preparation, classification, feature selection,
    generalization testing), a number of implementations of some popular
    algorithms (e.g., kNN, Ridge Regressions, Sparse Multinomial Logistic
    Regression), and bindings to external machine learning libraries (libsvm,
    mdp, etc).
    While it is not limited to neuroimaging data (e.g. fMRI, or EEG) it
    is eminently suited for such datasets.
  dev_url: https://github.com/PyMVPA/PyMVPA

extra:
  recipe-maintainers:
    - yarikoptic
    # Later when it all works and SPAM is meaningful
    # - mih
