From e35e5baad4acea2afa734f76c14a9c892d9b1a26 Mon Sep 17 00:00:00 2001
From: Yaroslav Halchenko <debian@onerussian.com>
Date: Wed, 1 Nov 2017 21:28:55 -0400
Subject: [PATCH 3/4] BF: make scatter robust to empty masks

---
 mvpa2/misc/plot/scatter.py       | 10 +++++-----
 mvpa2/tests/test_misc_scatter.py | 15 +++++++++------
 2 files changed, 14 insertions(+), 11 deletions(-)

diff --git a/mvpa2/misc/plot/scatter.py b/mvpa2/misc/plot/scatter.py
index 3d2f7ecb..ddb84f58 100755
--- a/mvpa2/misc/plot/scatter.py
+++ b/mvpa2/misc/plot/scatter.py
@@ -325,8 +325,8 @@ def plot_scatter(dataXd, mask=None, masked_opacity=0.,
     ax_scatter.plot((np.min(x), np.max(x)), (0, 0), 'r', alpha=0.5)
     ax_scatter.plot((0,0), (np.min(y), np.max(y)), 'r', alpha=0.5)
 
-    if (mask is not None and not masked_opacity):
-        # if there is a mask which was not intended to be plotted,
+    if (mask is not None and not masked_opacity and np.sum(mask)):
+        # if there is a non-degenerate mask which was not intended to be plotted,
         # take those values away while estimating min/max range
         _ = x[mask]; minx, maxx = np.min(_), np.max(_)
         _ = y[mask]; miny, maxy = np.min(_), np.max(_)
@@ -404,15 +404,15 @@ def plot_scatter(dataXd, mask=None, masked_opacity=0.,
         ax_scatter.set_ylim( ylim )
 
     # get values to plot for histogram and boxplot
-    x_hist, y_hist = (x, y) if mask is None else (x_masked, y_masked)
+    x_hist, y_hist = (x, y) if (mask is None or not np.sum(mask)) else (x_masked, y_masked)
 
-    if ax_hist_x is not None:
+    if np.any(binsx) and ax_hist_x is not None:
         ax_hist_x.xaxis.set_major_formatter(nullfmt)
         histx = ax_hist_x.hist(x_hist, bins=binsx, facecolor='b')
         ax_hist_x.set_xlim( ax_scatter.get_xlim() )
         ax_hist_x.vlines(0, 0, 0.9*np.max(histx[0]), 'r')
 
-    if ax_hist_y is not None:
+    if np.any(binsy) and ax_hist_y is not None:
         ax_hist_y.yaxis.set_major_formatter(nullfmt)
         histy = ax_hist_y.hist(y_hist, bins=binsy,
                                orientation='horizontal', facecolor='g')
diff --git a/mvpa2/tests/test_misc_scatter.py b/mvpa2/tests/test_misc_scatter.py
index 4159b5b9..052268ec 100644
--- a/mvpa2/tests/test_misc_scatter.py
+++ b/mvpa2/tests/test_misc_scatter.py
@@ -21,12 +21,12 @@ from glob import glob
 from mock import patch
 from os.path import join as pjoin
 
-data2d = np.random.randn(2, 4, 4)
-data3d = np.random.randn(3, 4, 4)
+data2d = np.random.randn(2, 2, 2)
+data3d = np.random.randn(3, 2, 2)
 
-data2d_3d = np.random.randn(2, 4, 4, 4)
-data2d_4d = np.random.randn(2, 4, 4, 4, 2)
-data2d_5d = np.random.randn(2, 4, 4, 4, 2, 3)
+data2d_3d = np.random.randn(2, 2, 2, 2)
+data2d_4d = np.random.randn(2, 2, 2, 2, 2)
+data2d_5d = np.random.randn(2, 2, 2, 2, 2, 2)
 
 
 def test_fill_nonfinites():
@@ -60,9 +60,12 @@ def test_plot_scatter():
     fig = plot_scatter(data2d, thresholds=[0.2])
     fig = plot_scatter(data2d, thresholds=[0.2, 0.4])
 
+    # smoke test for having a degenerate mask
+    fig = plot_scatter(data2d, thresholds=[10000])
+
     # smoke tests with stats
     fig = plot_scatter(data2d, include_stats=True)
-
+    pl.close('all')
     # test when it should fail
     assert_raises(ValueError, plot_scatter, data3d)
     assert_raises(ValueError, plot_scatter, data2d_5d)
-- 
2.14.1

